###############################################################################
#  When parsing files, spaces surrounding "name", "=", and "value" are ignored.
#  So the following lines are the same (assume '*' is an end-of-line marker):
#         file    =    somefile.txt        *
#  file=somefile.txt*
#
#  Until we come up with a better method, define the width and height of the
#  map, and then name each row with a number.  The parser will find all values
#  that it recognizes, like "file" or "width" and "height", and after those are
#  gone, it will assume numbers "0", "1", ..., "height - 1" are entries.
#
#  I know, it's a hack.  But soon someone will come up with a better solution
#  (like a binary format with a working map editor).
#
###############################################################################


#  Since the dimensions of the tiles used for the layers and obstacles will be
#  the same within this map, define it once here, and then simply pass the
#  values to the layer/obstacle object before it needs to start rendering.
#
#  Also, all layers that can be defined in this map will share a tilesheet, so
#  it can be declared in a single location as well.
<map>
  tile_width = 64
  tile_height = 48
</map>


<layer>
  tilemap = media/ground2.png
  width   = 9
  height  = 9
#  First  entry must start with "0"
       0  = 63 63 63 63 63 63 63 63 63
       1  = 63 55 49 49 49 49 49 56 63
       2  = 63 50 63 63 63 63 63 50 63
       3  = 63 50 63 63 62 63 63 50 63
       4  = 63 50 63 59 48 61 63 50 63
       5  = 63 50 63 63 60 63 63 50 63
       6  = 63 50 63 63 63 63 63 50 63
       7  = 63 57 49 49 49 49 49 58 63
       8  = 63 63 63 63 63 63 63 63 63
</layer>


<obstaclemap>
  width      = 9
  height     = 9
#  First entry must start with "0"
           0 = 0 0 0 0 0 0 0 0 0
           1 = 0 1 1 1 1 1 1 1 0
           2 = 0 1 0 0 0 0 0 1 0
           3 = 0 1 0 0 1 0 0 1 0
           4 = 0 1 0 1 1 1 0 1 0
           5 = 0 1 0 0 1 0 0 1 0
           6 = 0 1 0 0 0 0 0 1 0
           7 = 0 1 1 1 1 1 1 1 0
           8 = 0 0 0 0 0 0 0 0 0
</obstaclemap>


#  TRIGGER: Found down and right from the "+" in the middle of the room that
#  loads Map 1 when activated.
<entity>
  name       = test3_to_test1
  tile_x     = 6
  tile_y     = 6
  interact   = Maploader
  map        = media/test.map string
#  This should match the "name" of the entity found in the target map
  dest_name  = test1_to_test3 string
</entity>


#  This is the trigger in the top-left corner that lets you pick up as many
#  "items" (whatever kind they are) as you want.
#<entity>
#  name     = test3_LotsOfStuff
#  tile_x   = 3
#  tile_y   = 3
#  interact = Endless_supply
#</entity>
